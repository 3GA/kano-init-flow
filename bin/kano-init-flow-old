#!/usr/bin/env python

# kano-init-flow
#
# Copyright (C) 2014-2015 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# Main entry point to the application
#

#
# FIXME: An extremely nasty, but at this point the only effective way of
# making sure that an exception in this program will not cause the WIFI
# loop in the bootflow. We should ged rid of this and refactor as soon as
# we can drop support of the Beta-1.2.1 China image.
#
try:
    import os
    import sys
    import gettext
    from gi.repository import Gtk

    if __name__ == '__main__' and __package__ is None:
        DIR_PATH = os.path.abspath(
            os.path.join(os.path.dirname(__file__), '..'))
        if DIR_PATH != '/usr':
            sys.path.insert(1, DIR_PATH)
            LOCALE_PATH = os.path.join(DIR_PATH, 'locale')
        else:
            LOCALE_PATH = None

    gettext.install('kano-init-flow', LOCALE_PATH, unicode=1)

    from kano.utils import enforce_root

    from kano_init_flow_old.main_window import MainWindow
    from kano_init_flow_old.first_screen import FirstScreen
    from kano_init_flow_old.audio_screen import AudioScreen

    enforce_root(_('Please run it as root / sudo user!'))

    def main():
        # Check for possible arguments
        # We need this for backwards compatibility 1.3.1
        if len(sys.argv) == 2:
            first_screen = AudioScreen
            reboot_at_end = True
        else:
            first_screen = FirstScreen
            reboot_at_end = False

        MainWindow(first_screen, reboot_at_end)
        Gtk.main()

    if __name__ == '__main__':
        main()
except:
    import traceback
    from kano.logging import logger
    exc = traceback.format_exc().splitlines()
    for line in exc:
        logger.error(line)

    sys.exit(0)
