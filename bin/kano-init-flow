#!/usr/bin/env python

# kano-init-flow
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# Main window class
#

import os
import sys
from gi.repository import Gtk

if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.append(dir_path)

from kano.gtk3.apply_styles import apply_styles
from kano.utils import is_number
from kano_init_flow.first_screen import FirstScreen
from kano_init_flow.internet_screen import InternetScreen
from kano_init_flow.update_screen import UpdateScreen
from kano_init_flow.settings_intro_screen import SettingsIntroScreen
from kano_init_flow.display_screen import DisplayScreen
from kano_init_flow.audio_screen import AudioScreen
from kano_init_flow.unlock_screen import UnlockScreen

refs = {
    0: FirstScreen,
    1: InternetScreen,
    2: UpdateScreen,
    3: SettingsIntroScreen,
    4: DisplayScreen,
    5: AudioScreen,
    6: UnlockScreen,
}


# Window class
class MainWindow(Gtk.Window):

    def __init__(self, stage=0):

        WINDOW_WIDTH = 590
        WINDOW_HEIGHT = 440

        apply_styles()

        # Create main window
        Gtk.Window.__init__(self, title="Kano")
        self.set_decorated(False)
        self.set_size_request(WINDOW_WIDTH, WINDOW_HEIGHT)
        self.set_position(Gtk.WindowPosition.CENTER)
        self.set_resizable(False)
        self.connect("delete-event", Gtk.main_quit)
        self.goto(stage)

    def goto(self, stage):
        self.clear_win()
        refs[stage](self)

    def clear_win(self):
        for i in self.get_children():
            self.remove(i)


def main():
    stage_number = 0

    if len(sys.argv) == 2:
        text = sys.argv[1]

        if not text is None and is_number(text):
            stage_number = int(text)

    win = MainWindow(stage_number)
    win.show_all()
    Gtk.main()


if __name__ == '__main__':
    main()
